class Nodo:
 def __init__(self, dato):
 self.dato = dato
 self.siguiente = None

class ListaEnlazada:
 def __init__(self):
 self.cabeza = None

 def insertar_ordenado(self, dato):
 nuevo_nodo = Nodo(dato)
 if self.cabeza is None or self.cabeza.dato >= nuevo_nodo.dato:
 nuevo_nodo.siguiente = self.cabeza
 self.cabeza = nuevo_nodo
 return
 actual = self.cabeza
 while actual.siguiente is not None and actual.siguiente.dato < nuevo_nodo.dato:
 actual = actual.siguiente
 nuevo_nodo.siguiente = actual.siguiente
 actual.siguiente = nuevo_nodo

 def imprimir(self):
 actual = self.cabeza
 while actual is not None:
 print(actual.dato, end=" -> ")
 actual = actual.siguiente
 print("None")

def crear_lista():
 lista = ListaEnlazada()
 m=int(input("cuantos nodos desea crear "))
 for i in range(m):
 dato = int(input("Ingrese un nÃºmero: "))
 lista.insertar_ordenado(dato)
 return lista

def combinar_listas(lista1, lista2):
 lista_combinada = ListaEnlazada()
 visto = set()
 actual1 = lista1.cabeza
 actual2 = lista2.cabeza
 while actual1 is not None:
 if actual1.dato not in visto:
 lista_combinada.insertar_ordenado(actual1.dato)
 visto.add(actual1.dato)
 actual1 = actual1.siguiente
 while actual2 is not None:
 if actual2.dato not in visto:
 lista_combinada.insertar_ordenado(actual2.dato)
 visto.add(actual2.dato)
 actual2 = actual2.siguiente
 return lista_combinada

# Crear primer lista
print("Crear la primera lista:")
lista1 = crear_lista()
#crear segunda lista
print("\nCrear la segunda lista:")
lista2 = crear_lista()

# Combinar las dos listas y mostrar la lista combinada sin valores repetidos y ordenada
print("\nLa lista combinada sin valores repetidos y ordenada es:")
lista_combinada = combinar_listas(lista1, lista2)
lista_combinada.imprimir()